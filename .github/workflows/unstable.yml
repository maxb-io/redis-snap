name: Unstable

on:
    push:
    pull_request:
    workflow_dispatch:
    schedule:
      - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-22.04
    #if: github.repository == 'redis/redis-snap'
    strategy: 
        matrix:
            target-arch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v4
      with:
        repository: redis/redis
        path: redis
    - name: Prepare for cross-compilation
      run: |
          sudo dpkg --add-architecture arm64
          sudo sed -i 's/^deb /deb [arch=amd64] /g' /etc/apt/sources.list
          cat <<_END_ | sudo tee /etc/apt/sources.list.d/crosscompile.list
          deb [arch=arm64] http://ports.ubuntu.com $(lsb_release -cs) main universe
          deb [arch=arm64] http://ports.ubuntu.com $(lsb_release -cs)-updates main universe
          _END_
    - name: Setup Snapcraft
      run: |
        sudo snap install snapcraft --classic
    - name: Build Snap
      env:
        SNAPCRAFT_BUILD_ENVIRONMENT: host
        SNAPCRAFT_BUILD_INFO: 1
      run: |
          sudo snapcraft --verbose --target-arch ${{ matrix.target-arch }} --destructive-mode --enable-experimental-target-arch
      continue-on-error: true #Consider removing this line after testing
          
    -   name: Archive Snapcraft logs on failure
        # Can be removed when pushing to the real repository
        if: failure() # This step runs only if a previous step fails
        run: |
            LOG_DIR="${HOME}/.local/state/snapcraft"
            echo "Searching for logs in $LOG_DIR..."
            ls -R $LOG_DIR || echo "No logs found."
        continue-on-error: true # Ensure this step does not block execution

    -   name: Upload Snapcraft logs as artifact
        # Can be removed when pushing to the real repository
        if: failure() # Runs only on failure
        uses: actions/upload-artifact@v4
        with:
            name: snapcraft-logs
            path: ~/.local/state/snapcraft/
            
    - name: Upload
      run: |
          echo "placeholder for snap package upload"
          # for f in *.snap; do snapcraft upload --release=edge $f; done
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{secrets.SNAP_TOKEN}}
    - name: upload to artifacts
      # Can be removed when pushing to the real repository
      uses: actions/upload-artifact@v4
      with:
#        name: redis-snap
        path: |
            *.snap
